name: Build

permissions:
  contents: write

on:
  push:
    branches: [ master ]
    paths:
      - 'lib/**'
      - 'pubspec.yaml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup yq
        uses: vegardit/gha-setup-yq@v1

      - name: Setup zx
        uses: johngeorgewright/zx-action@v1.0.0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get release version
        id: app_version
        shell: zx --install {0}
        run: | # javascript
          // Format: <YYYY>.<MM>.<MICRO>
          // Example: 2023.10.0, 2025.2.3, 2024.1.12, ...
          import core from '@actions/core'
          const { stdout: currentVersion } = await $`yq '.version' pubspec.yaml`
          const { stdout: head } = await $`date +'%Y.%-m.'`
          const isPatchRelease = currentVersion.startsWith(head)
          const patch = isPatchRelease ? Number.parseInt(currentVersion.split('.').pop()) + 1 : 0
          core.setOutput('release', ${head}${patch})

      - name: Rewrite pubspec.yaml
        run: | # shell
          sed -i 's/version:.*/version: ${{ steps.app_version.outputs.release }}/' pubspec.yaml
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pubspec.yaml
          git commit -m "release: ${{ steps.app_version.outputs.release }}"
          git push

      - name: Get dependencies
        run: flutter pub get

      - name: Build
        run: |
          echo '${{ secrets.KEYSTORE_BASE64 }}' | base64 -d > android/release.keystore
          export STORE_PASSWORD='${{ secrets.KEYSTORE_PASSWORD }}'
          export KEY_ALIAS='${{ secrets.KEY_ALIAS }}'
          export KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}'
          flutter build apk --release

      - name: Prepare deploy
        run: |
          mkdir dist
          cp ./build/app/outputs/flutter-apk/app-release.apk ./

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ steps.app_version.outputs.release }}
          tag_name: v${{ steps.app_version.outputs.release }}
          files: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
