plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def keystorePropertiesFile = rootProject.file('key.properties')

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

static def getCommitHash() {
    def process = 'git rev-parse --short HEAD'.execute()
    process.waitFor()
    (process.exitValue() == 0) ? process.text.trim() : ''
}

android {
    namespace 'dev.yukineko.ekimemo_map'
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion
    compileSdkVersion 33

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            } else {
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
                storeFile rootProject.file('release.keystore')
                storePassword System.getenv('STORE_PASSWORD')
            }
        }
    }

    defaultConfig {
        multiDexEnabled true
        applicationId 'dev.yukineko.ekimemo_map'
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        buildConfigField('String', 'COMMIT_HASH', getCommitHash())
    }

    buildTypes {
        release {
            resValue('string', 'app_name', '駅メモマップ')
            signingConfig signingConfigs.release
        }
        debug {
            resValue('string', 'app_name', '駅メモマップ (Dev)')
            applicationIdSuffix '.debug'
            versionNameSuffix '-dev'
        }
    }

    dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
        implementation 'androidx.window:window:1.1.0'
        implementation 'androidx.window:window-java:1.1.0'
    }
}

flutter {
    source '../..'
}

dependencies {}
