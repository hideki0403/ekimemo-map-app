plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def tokenProperties = new Properties()
def tokenPropertiesFile = rootProject.file('token.properties')
def isExistTokenProperties = tokenPropertiesFile.exists()
if (isExistTokenProperties) {
    tokenPropertiesFile.withReader('UTF-8') { reader ->
        tokenProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def isExistKeyStoreProperties = keystorePropertiesFile.exists()
if (isExistKeyStoreProperties) {
    keystorePropertiesFile.withReader('UTF-8') { reader ->
        keystoreProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

static def getCommitHash() {
    def process = 'git rev-parse --short HEAD'.execute()
    process.waitFor()
    (process.exitValue() == 0) ? process.text.trim() : ''
}

android {
    namespace 'dev.yukineko.ekimemo_map'
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "26.1.10909125"
    compileSdkVersion 34

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            if (isExistKeyStoreProperties) {
                keyAlias keystoreProperties.getProperty('keyAlias')
                keyPassword keystoreProperties.getProperty('keyPassword')
                storeFile file(keystoreProperties.getProperty('storeFile'))
                storePassword keystoreProperties.getProperty('storePassword')
            } else {
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
                storeFile rootProject.file('release.keystore')
                storePassword System.getenv('STORE_PASSWORD')
            }
        }
    }

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        multiDexEnabled true
        applicationId 'dev.yukineko.ekimemo_map'
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        buildConfigField('String', 'COMMIT_HASH', "\"${getCommitHash()}\"")
        manifestPlaceholders = [
            'applicationName': 'android.app.Application',
            'GOOGLE_MAPS_API_KEY': isExistTokenProperties ? tokenProperties.getProperty('googleMapsApiKey') : (System.getenv('GOOGLE_MAPS_API_KEY') ?: 'DUMMY_API_KEY'),
        ]
    }

    buildTypes {
        release {
            resValue('string', 'app_name', '駅メモマップ')
            signingConfig signingConfigs.release
            shrinkResources false
        }
        debug {
            resValue('string', 'app_name', '駅メモマップ (Dev)')
            applicationIdSuffix '.debug'
            versionNameSuffix '-dev'
        }
    }

    dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
        implementation 'androidx.window:window:1.2.0'
        implementation 'androidx.window:window-java:1.2.0'
    }
}

flutter {
    source '../..'
}

dependencies {}
